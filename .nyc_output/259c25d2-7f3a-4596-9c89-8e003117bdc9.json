{"C:\\Anta\\github\\maquette-typescript-jsx-starter\\src\\components\\text-input.tsx":{"path":"C:\\Anta\\github\\maquette-typescript-jsx-starter\\src\\components\\text-input.tsx","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":22},"end":{"line":14,"column":1}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":42}},"5":{"start":{"line":9,"column":4},"end":{"line":13,"column":6}},"6":{"start":{"line":11,"column":12},"end":{"line":11,"column":146}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":22},"end":{"line":5,"column":23}},"loc":{"start":{"line":5,"column":40},"end":{"line":14,"column":1}},"line":5},"1":{"name":"handleInput","decl":{"start":{"line":6,"column":13},"end":{"line":6,"column":24}},"loc":{"start":{"line":6,"column":30},"end":{"line":8,"column":5}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":10,"column":16},"end":{"line":10,"column":17}},"loc":{"start":{"line":10,"column":28},"end":{"line":12,"column":9}},"line":10}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":3,"7":1},"f":{"0":1,"1":1,"2":3},"b":{},"inputSourceMap":{"version":3,"file":"C:\\Anta\\github\\maquette-typescript-jsx-starter\\src\\components\\text-input.tsx","sources":["C:\\Anta\\github\\maquette-typescript-jsx-starter\\src\\components\\text-input.tsx"],"names":[],"mappings":";;;AACA,6CAAmC;AAQ5B,IAAI,eAAe,GAAG,UAAC,MAAuB;IACnD,SAAS,WAAW,CAAC,GAAU;QAC7B,MAAM,CAAC,QAAQ,CAAE,GAAG,CAAC,MAA2B,CAAC,KAAK,CAAC,CAAC;IAC1D,CAAC;IAED,OAAO;QACL,MAAM,EAAE;YACN,OAAO,8BACL,IAAI,EAAC,MAAM,EACX,WAAW,EAAE,MAAM,CAAC,WAAW,EAC/B,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE,EACxB,OAAO,EAAE,WAAW,GAAI,CAAC;QAC7B,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AAdS,QAAA,eAAe,mBAcxB","sourcesContent":["import { MaquetteComponent } from 'maquette';\r\nimport { jsx } from 'maquette-jsx';\r\n\r\nexport interface TextInputConfig {\r\n  placeholder: string;\r\n  getValue(): string;\r\n  setValue(value: string): void;\r\n}\r\n\r\nexport let createTextInput = (config: TextInputConfig): MaquetteComponent => {\r\n  function handleInput(evt: Event) {\r\n    config.setValue((evt.target as HTMLInputElement).value);\r\n  }\r\n\r\n  return {\r\n    render: () => {\r\n      return <input\r\n        type='text'\r\n        placeholder={config.placeholder}\r\n        value={config.getValue()}\r\n        oninput={handleInput} />;\r\n    }\r\n  };\r\n};\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"94fa37150fc224a4af6453e532cd287fa32b4d31","contentHash":"23cc108fbcae23dcfd34d3c9fe17b3d342af041599ed4e55855f995e04947b20"}}